{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api/products'; // Backend API URL\n  }\n  // Fetch mobiles specifically\n  getMobiles() {\n    return this.http.get(`${this.baseUrl}/category/mobiles`);\n  }\n  // Fetch products by category dynamically\n  getProductsByCategory(category) {\n    return this.http.get(`${this.baseUrl}/category/${category}`);\n  }\n  // Fetch all products (if needed)\n  getProducts() {\n    return this.http.get(this.baseUrl);\n  }\n  addProduct(product) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(this.baseUrl, product, {\n      headers\n    });\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","ProductService","constructor","http","baseUrl","getMobiles","get","getProductsByCategory","category","getProducts","addProduct","product","headers","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\Angular Proj\\Shubham\\src\\app\\productservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './models/product.model'; // Ensure correct path\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private baseUrl = 'http://localhost:8080/api/products'; // Backend API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Fetch mobiles specifically\n  getMobiles(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.baseUrl}/category/mobiles`);\n  }\n\n  // Fetch products by category dynamically\n  getProductsByCategory(category: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.baseUrl}/category/${category}`);\n  }\n\n  // Fetch all products (if needed)\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.baseUrl);\n  }\n\n  \n\n  addProduct(product: Product): Observable<Product> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post<Product>(this.baseUrl, product, { headers });\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC,CAAC,CAAC;EAEjB;EAEvC;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,mBAAmB,CAAC;EACrE;EAEA;EACAG,qBAAqBA,CAACC,QAAgB;IACpC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,aAAaI,QAAQ,EAAE,CAAC;EACzE;EAEA;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,OAAO,CAAC;EAC/C;EAIAM,UAAUA,CAACC,OAAgB;IACzB,MAAMC,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACG,IAAI,CAACU,IAAI,CAAU,IAAI,CAACT,OAAO,EAAEO,OAAO,EAAE;MAAEC;IAAO,CAAE,CAAC;EACpE;;;uBAzBWX,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdhB,cAAc;MAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
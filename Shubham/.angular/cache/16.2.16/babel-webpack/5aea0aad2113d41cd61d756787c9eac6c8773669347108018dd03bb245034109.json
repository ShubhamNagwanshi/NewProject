{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  getMobiles() {\n    throw new Error('Method not implemented.');\n  } // Capitalized service name\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api/products'; // Backend API URL\n  }\n  // Fetch products by category dynamically\n  getProductsByCategory(category) {\n    return this.http.get(`${this.baseUrl}/category/${category}`);\n  }\n  // Fetch all products (if needed)\n  getProducts() {\n    return this.http.get(this.baseUrl);\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ProductService","getMobiles","Error","constructor","http","baseUrl","getProductsByCategory","category","get","getProducts","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\Angular Proj\\Shubham\\src\\app\\productservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  getMobiles() {\n    throw new Error('Method not implemented.');\n  }   // Capitalized service name\n  private baseUrl = 'http://localhost:8080/api/products'; // Backend API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Fetch products by category dynamically\n  getProductsByCategory(category: string): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.baseUrl}/category/${category}`);\n  }\n\n  // Fetch all products (if needed)\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.baseUrl);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EACzBC,UAAUA,CAAA;IACR,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C,CAAC,CAAG;EAGJC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC,CAAC,CAAC;EAEjB;EAEvC;EACAC,qBAAqBA,CAACC,QAAgB;IACpC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,OAAO,aAAaE,QAAQ,EAAE,CAAC;EACzE;EAEA;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,OAAO,CAAC;EAC/C;;;uBAhBWL,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdb,cAAc;MAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}